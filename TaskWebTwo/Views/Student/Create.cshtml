@model TaskWebTwo.Dtos.StudentCourseDto
@{
    ViewData["Title"] = "Create";
    var classtypes = (List<SelectListItem>)ViewBag.ClassType; 
    var genders = (List<SelectListItem>)ViewBag.Gender; 
    var Courses = (List<SelectListItem>)ViewBag.CourseId; 
    var Teachers = (List<SelectListItem>)ViewBag.TeacherNameId;

}
<link rel="stylesheet" href="~/css/courseCss.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
<div class="container row">
    <div style="text-align:center">
        <Lable id="errormsg" style="color:yellow"></Lable>
    </div>
    <div class="row">
        <form id="studentForm" class="form-group">
            <div class="mb-3 col-3">
                @Html.LabelFor(model=>model.studentDto.Name,new {@class="form-label required"})
                @Html.TextBoxFor(model=>model.studentDto.Name,new {@class="form-control"})
                @Html.ValidationMessageFor(model=>model.studentDto.Name,"",new{style="color:red"})
            </div>
            <div class="mb-3 col-3">
                @Html.LabelFor(model=>model.studentDto.DOB,new {@class="form-label required"})
                @Html.TextBoxFor(model=>model.studentDto.DOB,new {@type="date", @class="form-control"})
                @Html.ValidationMessageFor(model=>model.studentDto.DOB,"",new{style="color:red"})
            </div>
            <div class="mb-3 col-3">
                @Html.LabelFor(model=>model.studentDto.Age,new {@class="form-label"})
                @Html.TextBoxFor(model=>model.studentDto.Age,new {@class="form-control"})
                @Html.ValidationMessageFor(model=>model.studentDto.Age,"",new{style="color:red"})
            </div>
            <div class="mb-3 col-3">
                @Html.LabelFor(model=>model.studentDto.Gender,new {@class="form-label required"})
                @Html.DropDownListFor(model=>model.studentDto.Gender,genders,"--Select Gender Type--",new {@class="form-select"})
                @Html.ValidationMessageFor(model=>model.studentDto.Gender,"",new{style="color:red"})
            </div>
            <div class="mb-3 col-3">
                @Html.LabelFor(model=>model.studentDto.ClassType,new {@class="form-label required"})
                @Html.DropDownListFor(model=>model.studentDto.ClassType,classtypes,"--Select Class type",new {@class="form-select"})
                @Html.ValidationMessageFor(model=>model.studentDto.ClassType,"",new{style="color:red"})
            </div>
            <div class="col-8 mb-4 pb-2">
                <a id="showmodal"  class="btn btn-outline-warning" data-mdb-toggle="modal" data-mdb-target="#staticBackdrop">
                    <span style="font-size: 16px;">Add Courses</span>
                </a>
            </div>

            <button  id="saveStudent" class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>
<!-- Modal -->
<div class="modal fade"
     id="staticBackdrop"
     data-mdb-backdrop="static"
     data-mdb-keyboard="false"
     tabindex="-1"
     aria-labelledby="staticBackdropLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <form id="registerSubmit">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel" style="color:#106b62;font-size:22px;">إضافة نشاط</h5>
                    <button type="button" id="close1" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">

                    <div class="row mb-4">
                        <div class="col">
                            @Html.LabelFor(model=>model.courseInfoDto.CourseId,new {@class="form-label required"})
                            @Html.DropDownListFor(model=>model.courseInfoDto.CourseId,Courses,"-المادة الدراسية-",new{@class="form-select select"})
                            @Html.ValidationMessageFor(model=>model.courseInfoDto.CourseId,"",new{style="color:red"})

                        </div>
                        <div class="col">
                            @Html.LabelFor(model=>model.courseInfoDto.startingCourse,new {@class="form-label"})
                            @Html.TextBoxFor(model=>model.courseInfoDto.startingCourse,new {@type="date",@class="form-control"})
                            @Html.ValidationMessageFor(model=>model.courseInfoDto.startingCourse,"",new{style="color:red"})
                           
                        </div>
                    </div>
                  
                    <!-- Text input -->
                    <div class="form-outline mb-4">

                         @Html.LabelFor(model=>model.courseInfoDto.StudyPeriod,new {@class="form-label"})
                        @Html.TextBoxFor(model=>model.courseInfoDto.StudyPeriod,new {@class="form-control"})
                        @Html.ValidationMessageFor(model=>model.courseInfoDto.StudyPeriod,"",new{style="color:red"})
                    </div>

                    <div class="form-outline mb-4">

                        @Html.LabelFor(model=>model.courseInfoDto.TeacherNameId,new {@class="form-label required"})
                        @Html.DropDownListFor(model=>model.courseInfoDto.TeacherNameId,Teachers,"-المدرس-",new{@class="form-select select"})
                        @Html.ValidationMessageFor(model=>model.courseInfoDto.TeacherNameId,"",new{style="color:red"})
                    </div>
                    

                </div>

                <div class="modal-footer">
                    <button type="button" id="close2" class="btn btn-outline-warning" data-mdb-dismiss="modal" style="font-size: 18px;">إلغاء</button>
                    <button id="SaveCourse" type="button" class="btn btn-warning" style="font-size: 18px;">حفظ</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="tableIdcourses">
    @Html.Partial("_CouesesList",(Model.CourseInfoDtos != null)? Model.CourseInfoDtos:new())
</div>

@section Scripts{
    <script>
        $(document).ready(function () {

            $("#showmodal").on("click",function(){
                $("#staticBackdrop").modal("show");
            });
            $("#close1").on("click", function () {
                $("#staticBackdrop").modal("hide");
            }); 
            $("#close2").on("click", function () {
                $("#staticBackdrop").modal("hide");
            });
            $("#SaveCourse").on("click",function(){
                if ($("#registerSubmit").valid())
                {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveCourse","student")',
                    data: $("#registerSubmit").serialize(),

                    success: function (Data) {
                            $("#staticBackdrop").modal("hide");

                        $('#tableIdcourses').html(Data);
                        $('#registerSubmit')[0].reset();

                    },
                    error: function (jqXHR, status, err) {
                        alert(jqXHR.responseText);
                    }
                });
                }
            
            });

            $("#saveStudent").click(function (e) {
                e.preventDefault();
                var obj = $("#studentForm").serialize();
                if($("#studentForm").valid())
                {
                $.ajax({    
                    type: "POST",
                    url: '@Url.Action("Create","student")',
                    data: $("#studentForm").serialize(),
                   
                    success: function (Data) {
                        
                        if (Data.success == true) {
                            alert("تم حفظ الطالب")
                                window.location.replace('@Url.Action("create", "student")')

                        }
                        else {
                                alert("يجب اضافة مواد أولا")

                               // $("#errormsg").text("يجب إضافة مواد لهذا الطالب ");
                        }


                    },
                    error: function (jqXHR, status, err) {
                        alert(jqXHR.responseText);
                    }
                });
                }

            });
           

        
        
        });

    </script>


     @{ 
       await  Html.RenderPartialAsync("_ValidationScriptsPartial");
     }
}
